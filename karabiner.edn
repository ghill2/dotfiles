;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; R-HAND LAYER TEMPLATE

;; R-HAND

;; [:y :y]
;; [:u :u]
;; [:i :i]
;; [:o :o]
;; [:p :p]

;; [:h :h]
;; [:j :j]
;; [:k :k]
;; [:l :l]
;; [:semicolon :semicolon]

;; [:n :n]
;; [:m :m]
;; [:comma :comma]
;; [:period :period]
;; [:slash :slash]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; L-HAND LAYER TEMPLATE

;; [:q :q]
;; [:w :w]
;; [:e :e]
;; [:r :r]
;; [:t :t]

;; [:a :a]
;; [:s :s]
;; [:d :d]
;; [:f :f]
;; [:g :g]

;; [:z :z]
;; [:x :x]
;; [:c :c]
;; [:v :v]
;; [:b :b]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; LEGEND

;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option`
;; R  | right_shift
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any
;; hyper = [:##right_alt :!CTOleft_shift]
;; [:##spacebar :!CTOleft_shift nil {:alone :spacebar}]  ;; left thumb to hyper

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; or we can separate them into three manipulators
;; onfig files links
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/in-the-wild.md
;; {:des "a to 1" :rules [[:a :1]]}
;; {:des "b to 2" :rules [[:b :2]]}
;; {:des "c to insert 123" :rules [[:c [:1 :2 :3]]]}
;; https://github.com/yqrashawn/yqdotfiles/blob/master/modules/yqrashawn/home-manager/dotfiles/karabiner.edn
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/tutorial.md

;; https://github.com/rgomezcasas/dotfiles/blob/main/os/mac/karabiner-goku/karabiner.edn
;; https://github.com/alvaro-prieto/splitLayout/blob/master/karabiner.edn
;; multi froms here
;; https://github.com/mmroczka/.dotfiles/blob/master/karabiner/karabiner.edn
;; https://github.com/nikitavoloboev/config/blob/master/karabiner/karabiner.edn
;; https://github.com/yqrashawn/yqdotfiles/blob/master/modules/yqrashawn/home-manager/dotfiles/karabiner.edn

;; Keyboard Layouts
;; https://colemakmods.github.io/ergonomic-mods/curl.html
;; https://github.com/manna-harbour/miryoku/tree/master/docs/reference
;; https://stevep99.github.io/seniply/
;; https://configure.zsa.io/moonlander/layouts/DA95Z/latest/0
;; https://dreymar.colemak.org
;; https://www.youtube.com/watch?v=CA00USrhOMc
;; https://www.youtube.com/watch?v=j4b_uQX3Vu0
;; https://www.youtube.com/watch?v=Q22SLQkWSRw
;; https://github.com/callum-oakley/qmk_firmware/tree/master/users/callum
;; https://youtu.be/8wZ8FRwOzhU?t=498

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; TODO
;; right thumb alt to delete word
;; cmd+d should open terminal if not open already
;; activate browser should activate if not already
;; comment line
;; filechooser
;; highlight to closing bracket
;; file jump shortcuts
;; focus safari, discord, chatgpt text input
;; jump back to project after changing dotfiles
;; vscode project switcher
;; smart-indent start of line
;; re-run last command
;; run command in vscode?
;; focus config file chooser
;; open test file: get vscode extension working to add to
;; delete (lthumb) does not have key repeat
;; scroll page with nav
;; zoom in page
;; hash
;; highlight between quotes
;; implement long press: https://www.jonashietala.se/blog/2022/09/06/the_current_t-34_keyboard_layout/#long-press
;; implement repeat key https://www.jonashietala.se/blog/2022/09/06/the_current_t-34_keyboard_layout/#repeat-key
;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; CAUTION! If you have uncomented code above here gokuw will display Done! without writing to karabiner.json


;; Effort Grids and Maps
;; https://www.jonashietala.se/blog/2021/06/03/the-t-34-keyboard-layout/
;; https://deskthority.net/wiki/images/b/bd/Keyboard_effort_grid.png
;; Nav layers favourites:
;; https://decorous-derby-cf1.notion.site/Thoughts-on-keyboard-layouts-63ee6a98536044d394d178a807426972

;; Symbol layers favourites:
;; https://getreuer.info/posts/keyboards/symbol-layer/index.html
;; https://deskthority.net/wiki/BEAKL
;; https://stevep99.github.io/seniply/
;; https://github.com/Junsang-Mun/moonwol#layer-2-numbers--symbols
;; https://github.com/getreuer/qmk-keymap/blob/main/doc/layout_symbol.png
;; https://www.jonashietala.se/images/t-34/lmod.png
;; https://www.jonashietala.se/blog/2022/09/06/the_current_t-34_keyboard_layout/

;; Numpad Layer
;;https://decorous-derby-cf1.notion.site/Thoughts-on-keyboard-layouts-63ee6a98536044d394d178a807426972

;; Symbol layer list:
;; https://github.com/manna-harbour/miryoku/tree/master/docs/reference
;; https://dreymar.colemak.org/layers-extend.html
;; https://github.com/Junsang-Mun/moonwol#layer-2-numbers--symbols
;; https://github.com/Junsang-Mun/moonwol#layer-4-left-symbols
;; http://www.pvv.org/~hakonhal/main.cgi/keyboard http://www.pvv.org/~hakonhal/main.cgi/keyboard/arensito_devel
;; http://mostergonomickeyboard.blogspot.com
;; https://github.com/getreuer/qmk-keymap/blob/main/doc/layout_symbol.png
;; https://keymapdb.com
;; http://www.keyboard-layout-editor.com/#/gists/38f4435ff9a10256d9a7e1a0645c2fec
;; https://github.com/danielebra/qmk#layers
;; https://github.com/ecridge/jeo#the-jeo-keyboard-layout
;; https://josef-adamcik.cz/electronics/in-search-of-the-best-custom-keyboard-layout.html
;; https://noahfrederick.com/log/the-planck-keyboard
;; https://neo-layout.org/Layouts/neo/
;; https://peterxjang.com/blog/designing-a-36-key-custom-keyboard-layout.html
;; https://getreuer.info/posts/keyboards/symbol-layer/index.html
;; https://github.com/astronautr/60p-keyboard-layout#symbol-keys-mapping

;; TODO create a number layer with non-programming symbols
;; have programming layer with programming symbols

;; thumb alones: (space, delete, backspace, enter, tab, esc)
;; I still have all the brackets on symmetrical combos (left side for opening, right for closing)
;; easy access to the hyphen, underscore, semicolon and colon on the base layer as combos.
;; lock layer key on both the navigation
;; control + shift up and down to select paragraph
;; control backspace to delete word
;; delete word
;; escape tap
;; duplicate right and left
;; TODO select to next and prev bracket
;; map delete so can control + delete?

{
    :profiles
    {:Default
        {:default true
        :sim     50  ;; keys need to be pressed within this threshold to be considered simultaneous
        :delay   500  ;; time after which the key press is delayed
        :alone   250    ;; hold for .. ms to register single tap (freddie is at 250)
        :held    500  ;; amount of ms to trigger if helds
    }}
    
    :tos {
        :underscore {:key :hyphen :modi [:left_shift]}
        :plus {:key :equal_sign :modi [:left_shift]}
        :curly_bracket_open {:key :open_bracket :modi [:left_shift]}
        :curly_bracket_close {:key :close_bracket :modi [:left_shift]}
        :square_bracket_open {:key :open_bracket}
        :square_bracket_close {:key :close_bracket}
        :parenthesis_open {:key :9 :modi [:left_shift]}
        :parenthesis_close {:key :0 :modi [:left_shift]}
        :equal {:key :equal_sign}
        :dash {:key :hyphen}
        :backslash {:key :non_us_pound}
        :pipe {:key :Snon_us_pound}
        :redo_ {:key :z :modi [:left_shift :left_command]}
        :undo_ {:key :z :modi [:left_command]}
        :paste_ {:key :v :modi [:left_command]}
        :copy_ {:key :c :modi [:left_command]}
        :cut_ {:key :x :modi [:left_command]}
        :left {:key :left_arrow}
        :right {:key :right_arrow}
        :down {:key :down_arrow}
        :up {:key :up_arrow}
        :next_app {:key :tab :modi [:left_command]}
        :prev_app {:key :tab :modi [:left_command :left_shift]}
        :prev_tab {:key :tab :modi [:left_control :left_shift]}
        :next_tab {:key :tab :modi [:left_control]}
        :prev_window {:key :grave_accent_and_tilde :modi [:left_command :left_shift]}
        :next_window {:key :grave_accent_and_tilde :modi [:left_command]}
        :prev_word {:key :left_arrow :modi [:left_option] :lazy true}
        :next_word {:key :right_arrow :modi [:left_option] :lazy true}
        :single_quote {:key :quote}
        :double_quote {:key :quote :modi [:left_shift]}
        :apostrophe {:key :1 :modi [:left_shift]}
        :at {:key :2 :modi [:left_shift]}
        :hash {:key :3 :modi [:left_shift]}
        :hash_space [{:key :3 :modi [:left_shift]} {:key :spacebar}]
        :dollar {:key :4 :modi [:left_shift]}
        :percent {:key :5 :modi [:left_shift]}
        :caret {:key :6 :modi [:left_shift]}
        :ampersand {:key :7 :modi [:left_shift]}
        :asterisk {:key :8 :modi [:left_shift]}
        :less_than {:key :comma :modi [:left_shift]}
        :greater_than {:key :period :modi [:left_shift]}
        :return {:key :return_or_enter}
        :enter {:key :return_or_enter}
        :delete {:key :delete_forward}
        :left_pane {:key :d :modi [:left_control]}
        :right_pane {:key :f :modi [:left_control]}
        :colon {:key :semicolon :modi [:left_shift]}
    }

    :applications
    {;; To obtain the app ID: `grep -A1 "CFBundleIdentifier" /Applications/The.app/Contents/Info.plist`
        :Chrome-mode    ["com.google.Chrome", "com.google.Chrome.beta"]
        :Finder-mode    ["com.apple.finder"]
        :Safari-mode    ["com.apple.Safari"]
        :VSCode-mode    ["com.microsoft.VSCode"]
        :TextEdit-mode  ["com.apple.TextEdit"]
    }
    
    ;; With layer and variable, how to trigger the original modifier with other keys?

    ;; [:alfred "search google" "net.deanishe.alfred-searchio"]
    ;; ;; you can create templates for running shell commands. These follow clojure string template syntax.
    :templates {
        :open   "open \"%s\""
        :alfred "osascript -e 'tell application \"Alfred 3\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
        :focus_file "/usr/local/bin/code --reuse-window \"%s\""
        :open-app "open -a \"%s\""
    }
    ;; :modifiers {:cap [:left_control]}
    :froms {
        :lthumb1 {:key :f21}
        :lthumb2 {:key :f20}
        :lthumb3 {:key :f19}
        :rthumb1 {:key :f22}
        :rthumb2 {:key :f23}
        :rthumb3 {:key :f24}
    }
    :simlayers {
        ;; all layers are mapped to f20, which does nothing. Layers are toggled in section in main.
        :nav {:key :f20}
        :sym {:key :f20}
        :launch {:key :f20}
    }
    :main [
        {:des "thumbs" :rules [
            ;; [:##f24 :[{:key :left_shift} {:set ["cap-mode" 1]}] nil {:afterup ["cap-mode" 0] :alone :escape}]
            [:lthumb1 [{:key :left_shift} {:set ["nav" 1]}] nil {:afterup ["nav" 0] :alone :enter}]
            [:lthumb2 :left_command nil {:alone :spacebar}]
            [:lthumb2 :left_option nil {:alone :escape}]
            [:rthumb2 {:set ["sym" 1]} nil {:afterup ["sym" 0]}]
            [:rthumb3 nil nil {:alone :delete_or_backspace}]

            ;; [:##caps_lock :escape]
            ;; [:##b [:focus_file "/Users/g1/BU/projects/dotfiles/.Brewfile"]]
        ]}

        {:des "file shortcuts" :rules [ :launch
            [:p [:focus_file "/Users/g1/BU/projects/dotfiles/.Brewfile"]]
            [:k [:focus_file "/Users/g1/BU/projects/dotfiles/karabiner.edn"]]
            [:l [:focus_file "/Users/g1/BU/projects/dotfiles/keybindings.json"]]
            [:s [:focus_file "/Users/g1/BU/projects/dotfiles/settings.json"]]
            [:r [:focus_file "/Users/g1/BU/projects/dotfiles/.bashrc"]]
            [:v "open -b com.microsoft.VSCode"]
            [:b "open -b com.apple.Safari"]
            [:d "open -b com.hnc.Discord"]
        ]}
        
        {:des "lthumb-rhand" :rules [ :nav
            [:##y :redo_]
            [:##u :paste_]
            [:##i :copy_]
            [:##o :cut_]
            [:##p :undo_]
            
            [:##h :page_up]
            [:##j :prev_word]
            [:##k :down_arrow]
            [:##l :up_arrow]
            [:##semicolon :next_word]
            
            [:##n :page_down]
            [:##m :home]
            [:##comma :left]
            [:##period :right]
            [:##slash :end]

            ;; [:f22 :left_shift] ;; rthumb
        ]}
        
        {:des "lthumb-lhand" :rules [ :nav
            [:q :prev_window]
            [:w :next_window]
            [:##e :left_pane]
            [:##r :right_pane]
            [:##t :left_shift]

            [:##a :prev_app]
            [:##s :next_app]
            [:##d :prev_tab]
            [:##f :next_tab]
            [:##g :left_shift]

            [:##z :undo_]
            [:##x :cut_]
            [:##c :copy_]
            [:##v :paste_]
            [:##b :redo_]
        ]}
        
        ;; 23 SYMBOL LAYER: " ' # : - _ ( [ + = { ) } ] ~ & | % ` @ $ \
        ;; NORMAL POSITION: < . , > ? /
      
        {:des "sym lhand" :rules [:sym
            ;; [:q :q]
            ;; [:w :curly_bracket_open]
            ;; [:e :comma]
            ;; [:r :square_bracket_open]
            ;; [:t :t]

            ;; [:a :a]
            ;; [:s :comma]
            [:d :parenthesis_open]
            ;; [:f :double_quote]
            ;; [:g :g]

            ;; [:z :z]
            [:x :curly_bracket_open]
            [:c :square_bracket_open]
            ;; [:v :single_quote]
            ;; [:b :b]
        ]}
        
        {:des "sym rhand" :rules [:sym
            ;; [:y :y]
            [:u :less_than]
            [:i :equal]
            [:o :greater_than]
            [:p :plus]
            
            ;; [:h :h]
            [:j :colon]
            [:k :parenthesis_close]
            [:l :double_quote]
            [:semicolon :semicolon]
            [:quote :slash]
            
            ;; [:n :n]
            [:m :comma]
            [:comma :square_bracket_close]
            [:period :curly_bracket_close]
            [:slash :single_quote]

        ]}
        {:des "sym normal remap" :rules [
            [:semicolon :underscore]
            [:slash :double_quote]
            ;; [:!Sslash :double_quote]
        ]}

        {:des "num lhand" :rules [:sym
            ;; [:q :q]
            ;; [:w :w]
            ;; [:e :e]
            ;; [:r :r]
            ;; [:t :t]

            ;; [:a :a]
            ;; [:s :s]
            ;; [:d :d]
            ;; [:f :f]
            ;; [:g :g]

            ;; [:z :z]
            ;; [:x :x]
            ;; [:c :c]
            ;; [:v :v]
            ;; [:b :b]
        ]}
        
        {:des "num lhand" :rules [:sym
            ;; [:y :y]
            ;; [:u :u]
            ;; [:i :i]
            ;; [:o :o]
            ;; [:p :p]

            ;; [:h :h]
            ;; [:j :j]
            ;; [:k :k]
            ;; [:l :l]
            ;; [:semicolon :semicolon]

            ;; [:n :n]
            ;; [:m :m]
            ;; [:comma :comma]
            ;; [:period :period]
            ;; [:slash :slash]
        ]}
        
    ]
}



        
        

