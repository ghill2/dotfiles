;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; R-HAND LAYER TEMPLATE

;; R-HAND

;; [:y :y]
;; [:u :u]
;; [:i :i]
;; [:o :o]
;; [:p :p]

;; [:h :h]
;; [:j :j]
;; [:k :k]
;; [:l :l]
;; [:semicolon :semicolon]

;; [:n :n]
;; [:m :m]
;; [:comma :comma]
;; [:period :period]
;; [:slash :slash]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; L-HAND LAYER TEMPLATE

;; [:q :q]
;; [:w :w]
;; [:e :e]
;; [:r :r]
;; [:t :t]

;; [:a :a]
;; [:s :s]
;; [:d :d]
;; [:f :f]
;; [:g :g]

;; [:z :z]
;; [:x :x]
;; [:c :c]
;; [:v :v]
;; [:b :b]

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; LEGEND

;; !  | means mandatory
;; #  | means optional
;; C  | left_command
;; T  | left_control
;; O  | left_option
;; S  | left_shift
;; F  | fn
;; Q  | right_command
;; W  | right_control
;; E  | right_option`
;; R  | right_shift
;; !! | mandatory command + control + optional + shift (hyper)
;; ## | optional any
;; hyper = [:##right_alt :!CTOleft_shift]
;; [:##spacebar :!CTOleft_shift nil {:alone :spacebar}]  ;; left thumb to hyper

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;

;; or we can separate them into three manipulators
;; onfig files links
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/in-the-wild.md
;; {:des "a to 1" :rules [[:a :1]]}
;; {:des "b to 2" :rules [[:b :2]]}
;; {:des "c to insert 123" :rules [[:c [:1 :2 :3]]]}

;; https://github.com/yqrashawn/yqdotfiles/blob/master/modules/yqrashawn/home-manager/dotfiles/karabiner.edn
;; https://github.com/yqrashawn/GokuRakuJoudo/blob/master/tutorial.md

;; https://github.com/rgomezcasas/dotfiles/blob/main/os/mac/karabiner-goku/karabiner.edn
;; https://github.com/alvaro-prieto/splitLayout/blob/master/karabiner.edn
;; multi froms here
;; https://github.com/mmroczka/.dotfiles/blob/master/karabiner/karabiner.edn
;; https://github.com/nikitavoloboev/config/blob/master/karabiner/karabiner.edn
;; https://github.com/yqrashawn/yqdotfiles/blob/master/modules/yqrashawn/home-manager/dotfiles/karabiner.edn

;; Keyboard Layouts
;; https://colemakmods.github.io/ergonomic-mods/curl.html
;; https://github.com/manna-harbour/miryoku/tree/master/docs/reference
;; https://stevep99.github.io/seniply/
;; https://configure.zsa.io/moonlander/layouts/DA95Z/latest/0
;; https://dreymar.colemak.org
;; https://www.youtube.com/watch?v=CA00USrhOMc
;; https://www.youtube.com/watch?v=j4b_uQX3Vu0
;; https://www.youtube.com/watch?v=Q22SLQkWSRw
;; https://github.com/callum-oakley/qmk_firmware/tree/master/users/callum
;; https://youtu.be/8wZ8FRwOzhU?t=498

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; TODO
;; comment line
;; highlight to closing bracket
;; file jump shortcuts
;; focus safari, discord, chatgpt text input
;; jump back to project after changing dotfiles
;; vscode project switcher
;; smart-indent start of line
;; re-run last command
;; run command in vscode?
;; focus config file chooser
;; open test file: get vscode extension working to add to
;; delete (lthumb) does not have key repeat
;; scroll page with nav
;; zoom in page

;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;;
;; CAUTION! If you have uncomented code above here gokuw will display Done! without writing to karabiner.json

{
    :profiles {:Default
    {:default true
        :sim     50  ;; keys need to be pressed within this threshold to be considered simultaneous
        :delay   500  ;; time after which the key press is delayed
        :alone   250    ;; hold for .. ms to register single tap (freddie is at 250)
        :held    500  ;; amount of ms to trigger if helds
        }}
    :applications
    {;; To obtain the app ID: `grep -A1 "CFBundleIdentifier" /Applications/The.app/Contents/Info.plist`
        :Chrome    ["com.google.Chrome", "com.google.Chrome.beta"]
        :Finder    ["com.apple.finder"]
        :Safari    ["com.apple.Safari"]
        :VSCode    ["com.microsoft.VSCode"]
        :TextEdit  ["com.apple.TextEdit"]
    }
    ;; :froms [
    ;;     {:modi [:left_command :left_shift] :key :v}
    ;; ]
    
    ;; With layer and variable, how to trigger the original modifier with other keys?

    ;; [:alfred "search google" "net.deanishe.alfred-searchio"]
    :templates {
        :open   "open \"%s\""
        :alfred "osascript -e 'tell application \"Alfred 3\" to run trigger \"%s\" in workflow \"%s\" with argument \"%s\"'"
        :focus_file "code --reuse-window \"%s\""
    }
    ;; :modifiers {:cap [:left_control]}
    
    :layers {
        :lthumb {:key :f23 :alone {:key :return_or_enter}}
        :sym {:key :f22 :alone {:key :delete_or_backspace}}
        :rthumb {:key :f24 :alone {:key :spacebar}}
    }
    :main [
        
        {:des "misc" :rules [
            [:##f24 :left_shift nil {:alone :spacebar}]
            [:##caps_lock :caps_lock nil {:alone :escape}]
            ;; [:##b [:focus_file "/Users/g1/BU/projects/dotfiles/.Brewfile"]]
        ]}
        
        {:des "lthumb-lhand" :rules [:lthumb
            ;; [:q :q]
            ;; [:w :w]
            [:##e :!TStab]  ;; prev tab
            [:##r :!Ttab]  ;; next tab
            ;; [:t :t]

            [:##a :!Td]  ;; right pane
            [:##s :!Tf]  ;; prev pane
            [:##d :left_shift]
            [:##f :left_option]
            ;; [:g :g]

            [:##z :!CSgrave_accent_and_tilde]  ;; prev window
            [:##x :!Cgrave_accent_and_tilde]  ;; next window
            [:##c :!CStab]  ;; prev application
            [:##v :!Ctab]  ;; next application
            ;; [:b :b]
        ]}

        {:des "lthumb-rhand" :rules [:lthumb
            ;; [:y :y]
            ;; [:u :u]
            ;; [:i :i]
            ;; [:o :o]
            ;; [:p :p]
            
            ;; [:h :h]
            [:##j :left_arrow]
            [:##k :down_arrow]
            [:##l :up_arrow]
            [:##semicolon :right_arrow]
            
            ;; [:n :n]
            ;; [:m :m]
            ;; [:comma :comma]
            ;; [:period :period]
            ;; [:slash :slash]

            [:##m :home]
            ;; [:comma :comma] ;; TODO select to previous bracket
            ;; [:period :period]  ;; TODO select to next bracket
            [:##slash :end]
            
        ]}
        
        

        {:des "sym rhand" :rules [:sym
            [:u :!Sopen_bracket] ;; left curly bracket
            [:i :!Sclose_bracket]  ;; right curly bracket
            [:o :!Shyphen] ;; underscore
            [:p :!Sequal_sign] ;; plus

            [:j :!S9] ;; left parenthesis
            [:k :!S0]  ;; right parenthesis
            [:l :hyphen] ;; hyphen
            [:semicolon :equal_sign] ;; equal
            
            [:m :open_bracket] ;; left square bracket
            [:comma :close_bracket] ;; right square bracket
            [:period :non_us_pound] ;; backslash
            [:slash :!Snon_us_pound] ;; pipe
        ]}
    ]
}



        
        
