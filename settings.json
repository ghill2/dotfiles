
{
    //////////////////////////////////////////////////////////////////////////
    // Rust
    "rust.linting.enabled": true,
    "errorLens.exclude": ["Trailing comma"],
    "errorLens.gutterIconsEnabled": true,
    "errorLens.statusBarMessageEnabled": true,
    "errorLens.statusBarIconsEnabled": true,
    "errorLens.enabledDiagnosticLevels": ["error"], // , "warning" , "info"
    "[rust]": {
        "editor.defaultFormatter": "rust-lang.rust-analyzer",
        "editor.formatOnSave": true
    },
    "rust-analyzer.rustfmt.overrideCommand": null,
    "rust-analyzer.rustfmt.extraArgs": [],
    "rust-analyzer.checkOnSave": true,
    "rust-analyzer.check.command": "clippy",
    "rust-analyzer.workspace.symbol.search.scope": "workspace",
    "rust-analyzer.cargo.buildScripts.enable": true,
    "rust-analyzer.procMacro.enable": true,
    "rust-analyzer.cargo.targetDir": true, // fixes re-compilation each time
    "rust-analyzer.restartServerOnConfigChange": true,
    //////////////////////////////////////////////////////////////////////////
    "editor.inlineSuggest.enabled": true,
    "gitlens.advanced.messages": {
        "suppressCreatePullRequestPrompt": true
    },
    "search.useIgnoreFiles": false,
    "git.autofetch": true,
    "diffEditor.ignoreTrimWhitespace": false,
    "window.density.editorTabHeight": "compact",
    "window.zoomLevel": 1.0,
    "terminal.integrated.scrollback": 500000,
    "workbench.colorTheme": "Default Dark Modern",
    "workbench.editorAssociations": {
        "*.xlsx": "default"
    },
    "hediet.vscode-drawio.resizeImages": null,
    "chat.editing.alwaysSaveWithGeneratedChanges": true,
    "editor.quickSuggestions": {
        "comments": "on"
    },
    "python.terminal.activateEnvironment": true,
    "commands.quickPickIncludeAllCommands": false, // include all commands from Command Palette to the Quick Pick.
    "commands.populateCommandPalette": true, // Adds all items to Command Palette (Requires application reload after adding a command)
    "commands.commands": {
        "run_test": {
            "sequence": [
                "workbench.action.terminal.clear",
                "insert_pytest",
                "pytest-grabber.generatePath",
                "workbench.action.terminal.focus",
                "editor.action.clipboardPasteAction",
                "run_terminal",
            ]
        },
        "insert_pytest": {
            "command": "workbench.action.terminal.sendSequence",
            "args": {
                "text": "RUST_BACKTRACE=1 python -m pytest -rP --tb=native --capture=tee-sys -vv ",
            },
        },
        "run_terminal": {
            "command": "workbench.action.terminal.sendSequence",
            "args": {
                "text": "\r",
            }
        },
        "Format": {
            "sequence": [ // keep in ths order otherwise overwrite fails
                "editor.action.formatDocument",
                "editor.action.organizeImports", // use isort to sort imports
                "autoflake.removeUnused", // removed unused imports
            ]
        },
        "Sort & Remove Unused Imports": {
            "sequence": [
                "autoflake.removeUnused", // removed unused imports
                "editor.action.organizeImports", // use isort to sort imports
            ]
        },
        "Remove Unused Imports": {
            "command": "autoflake.removeUnused", // removed unused imports
        },
        "Sort Imports": {
            "command": "editor.action.organizeImports", // use isort to sort imports
        },
        "Format Only": {
            "command": "editor.action.formatDocument", // use isort to sort imports
        }
    },
    
    //////////////////////////////////////////////////////////////////////////
    // Python Config
    "editor.defaultFormatter": "ms-python.black-formatter",
    "python.formatting.provider": "black",
    // "python.languageServer": "Pylance",
    // "ruff.enable": false, // python linting using ruff
    // "python.linting.enabled": false,
    // "python.linting.pyLanceEnabled": false,
    // "python.linting.pylintEnabled": false,
    // "python.linting.banditEnabled": false,
    // "python.linting.flake8Enabled": false,
    // "python.linting.mypyEnabled": false,
    // "python.linting.prospectorEnabled": false,
    // "python.linting.pycodestyleEnabled": false,
    // "python.linting.pydocstyleEnabled": false,
    // "python.linting.pylamaEnabled": false,
    "python.dataScience.alwaysTrustNotebooks": true,
    "autoflake-extension.remove-all-unused-imports": true, // mikoz.autoflake-extension
    "autoflake.verbose": true, // for debugging
    ///////////////////////////////////////////////////////////////////////////////////
    // Editor & Application Settings
    "editor.tokenColorCustomizations": {
        "textMateRules": []
    },
    "editor.tabCompletion": "on", // By default, tab completion is disabled. Use the editor.tabCompletion setting to enable it.
    "editor.acceptSuggestionOnEnter": "on",
    "editor.fontSize": 14,
    "terminal.integrated.fontSize": 15,
    "editor.scrollBeyondLastLine": true,
    "editor.minimap.enabled": false,
    "editor.lineNumbers": "on",
    "editor.hideCursorInOverviewRuler": true, // This will keep the scrollbar, but will result in it only appearing when the cursor is within the editor, as seen in the image below:
    "editor.glyphMargin": false, // Hide/Show breakpoint margin, gutter
    "editor.rulers": [100], // 79, 100  In Python code, the length of a line should be limited to at most 79 characters.
    "files.exclude": { // exclude files from explorer
        ".c": false,
        "/usr": false,
        "submodule": false, // makes sure that the "submodule" folder is not excluded and will be included in searches.
    },
    "search.exclude": { // exclude folders from search index
        "Z": true,
        ".direnv": true,
        // ".venv": true,
        // "venv": true,
        "node_modules": true    // this excludes the folder only from the root of your workspace 
    },
    "workbench.sideBar.location": "right",
    "workbench.editor.revealIfOpen": false, // https://superuser.com/a/1313190
    "terminal.integrated.smoothScrolling": true,
    "trailing-spaces.highlightCurrentLine": false, // Highlighting of trailing spaces in the currently edited line can be annoying: each time you are about to start a new word, the space you type is matched as a trailing spaces. Currently edited line can thus be ignored:
    "trailing-spaces.includeEmptyLines": false, // When firing the deletion command, empty lines are matched as trailing regions, and end up being deleted. You can specifically ignore them:
    "window.newWindowDimensions": "inherit", // maximize new window
    "window.openFilesInNewWindow": "off",
    "window.openFoldersInNewWindow": "off",
    "explorer.confirmDragAndDrop": false,
    "workbench.iconTheme": "Monokai Classic Icons", // increase by x10 // 2147483647
    "extensions.ignoreRecommendations": true,
    "extensions.autoUpdate":false,
    "extensions.autoCheckUpdates": false,
    "terminal.integrated.defaultProfile.windows": "PowerShell",
    "security.workspace.trust.untrustedFiles": "open",
    "terminal.integrated.defaultProfile.osx": "zsh",
    "terminal.integrated.enableMultiLinePasteWarning": false,
    "printcode.lineNumbers": "off",
    "telemetry.telemetryLevel": "off",
    "security.workspace.trust.enabled": false,
    "terminal.integrated.hideTerminalReuseAlert": true,
    "print.lineNumbers": "off",
    "print.fontSize": "13pt",
    "print.formatMarkdown": true,
    "editor.suggestSelection": "first",
    "vsintellicode.modify.editor.suggestSelection": "automaticallyOverrodeDefaultValue",
    "workbench.colorCustomizations": {
        "statusBar.background": "#005f5f",
        "statusBar.noFolderBackground": "#005f5f",
        "statusBar.debuggingBackground": "#005f5f"
    },
    "debug.onTaskErrors": "abort", // if debug fails, what to do
    "renderWhitespace": "all",
    "files.autoSave": "afterDelay",
    "explorer.confirmDelete": false,
    "task.problemMatchers.neverPrompt": {
        "shell": true
    },
    "security.warnOnExternalOpen": false,
    "editor.scrollbar.verticalScrollbarSize": 15,
    //////////////////////////////////////////////////////////////////////////
    // Javascript Formatting
    "html.format.wrapLineLength":120,
    "beautify.language": {
    "js": {
        "type": ["javascript", "json"],
        "filename": [".jshintrc", ".jsbeautifyrc"]
            // "ext": ["js", "json"]
            // ^^ to set extensions to be beautified using the javascript beautifier
        },
        "css": ["css", "scss"],
        "html": ["htm", "html"]
        // ^^ providing just an array sets the VS Code file type
    },
    "[javascript]": {
        "editor.defaultFormatter": "HookyQR.beautify",
        "editor.tabSize": 4
    },
    "[css]": {
        "editor.defaultFormatter": "HookyQR.beautify",
        "editor.tabSize": 2
    },
    "[html]": {
        "editor.defaultFormatter": "HookyQR.beautify",
        "editor.tabSize": 2
    },
    "[json]": {
        "editor.defaultFormatter": "vscode.json-language-features"
    },

    ///////////////////////////////////////////////////////////////////////////////////
    // Extensions & Misc
    "openline.programpath": "/Users/g1/BU/projects/linktrigger.py",
    // python -m pytest -rA --tb=native --capture=tee-sys -v
    // python -m pytest -rA --tb=native --capture=tee-sys
    "pytest_runner.pytest_exec": "python -m pytest", // run pytest extension: default is /usr/bin/pytest, which doesn't use .venv RUST_BACKTRACE=1 
    // "pytest_runner.pytest_options": "-rP --tb=native --capture=tee-sys -vv --exitfirst -o log_cli=true",
    "pytest_runner.pytest_options": "-s",
    "python.testing.pytestArgs": [
        // "-rP",
        // "--tb=native",
        // "--capture=tee-sys",
        // "-vv",
        // "--exitfirst",
        // "-s"
    ],
    "python.testing.pytestEnabled": true,
    "python.testing.unittestEnabled": false,
    "python.testing.pytestPath": "RUST_BACKTRACE=1 python -m pytest",
    "pytest_runner.check_config": false,
    "jumpToCounterpart.pairs": {
        ".h": ".cpp",
        ".js": ".css",
        ".tsx": ".module.css",
    },
    "culp.fullPath.removeDiscColons": true,
    ///////////////////////////////////////////////////////////////////////////////////
    // Git
    "git.confirmSync": false,
    "gitlens.currentLine.enabled": false,
    "gitlens.hovers.currentLine.over": "line",
    "gitlens.codeLens.enabled": false,
    "gitlens.views.searchAndCompare.files.layout": "tree",
    "gitlens.hovers.enabled": false,
    "gitlens.views.contributors.showAllBranches": true,
}