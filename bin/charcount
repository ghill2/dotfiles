#!python

from pathlib import Path

def count_characters_in_file(file_path) -> dict:
    char_count = {}
    try:
        with open(file_path, 'r') as file:
            content = file.read()
            for char in content:
                char_count[char] = char_count.get(char, 0) + 1
        return char_count
    except FileNotFoundError:
        print("File not found.")
        return {}

def find_files_by_extensions(folders, extensions):
    matching_files = []
    for folder in folders:
        for extension in extensions:
            for path in Path(folder).rglob(f"*.{extension}"):
                if ".venv" not in str(path):
                    matching_files.append(path)
    return matching_files

if __name__ == "__main__":
    path1 = "/Users/g1/BU/projects/pytower_develop/pytower/data/files.py"
    path2 = "/Users/g1/BU/projects/pytower_develop/pytower/data/import.py"
    
    folders = [
            "/Users/g1/BU/projects/pytower_develop/pytower",
            "/Users/g1/BU/projects/nautilus_trader_develop"
    ]
    
    paths = find_files_by_extensions(folders, ["py", "pyx", "pxd"])

    total = {}
    for path in paths:
        counts = count_characters_in_file(path)
        for char, count in counts.items():
            total[char] = total.get(char, 0) + count
    chars = {
       '"',
       "'",
       "#",
       ":",
       "-",
       "_",
       "(",
       "{"
       "[",
       ")",
       "}",
       "]",
       "+",
       "=",
       
       "~",
       "&",
       "|",
       "%",
       "`",
       "@",
       "$",
       "/",
       ",",
       ".",
       "<",
       ">",
       "?",
       "/",
       "!",
       "@",
       "%",
       "^",
       "&",
       "*",
       ";",
    }
    
    total = {key: value for key, value in total.items() if key in chars}
    total = sorted(total.items(), key=lambda x: x[1], reverse=True)
    for char, count in total:
        print(f"{char} {count}")
        
    
